
#include "../Common.ush"

uint3 Dimensions;
Buffer<float> MipTree;
uint MipLevel;
uint2 TexViewSize;
RWTexture2D<float> Output;

uint2 DimensionsAtLevel(uint Level)
{
	return uint2(Dimensions.x >> Level, Dimensions.y >> Level);
}

uint BufferOffsetAtPixel(uint2 Pixel, uint Level)
{
	uint Offset = 0;
	for (uint LevelIndex = 0; LevelIndex < Level; ++LevelIndex)
	{
		uint2 MipLevelDimensions = DimensionsAtLevel(LevelIndex);
		Offset += MipLevelDimensions.x * MipLevelDimensions.y;
	}

	uint2 MipLevelDimensions = DimensionsAtLevel(Level);
	Offset += Pixel.y * MipLevelDimensions.x + Pixel.x;
	return Offset;
}

[numthreads(THREADGROUP_SIZE, THREADGROUP_SIZE, 1)]
void VisualizeMipTreeCS(
	uint3 DispatchThreadId : SV_DispatchThreadID
)
{
	// uint MipLevel = 2;
	uint2 Pixel = DispatchThreadId.xy;
	if( Pixel.x >= TexViewSize.x || Pixel.y >= TexViewSize.y)
		return;
	
	float2 UV = Pixel / float2(TexViewSize.x, TexViewSize.y);
	uint2 TexCoord = UV * DimensionsAtLevel(MipLevel);

	uint BufferOffset = BufferOffsetAtPixel(TexCoord, MipLevel);
	Output[Pixel] = MipTree[BufferOffset];

	// OutColor = float4(UV,0,1);
}